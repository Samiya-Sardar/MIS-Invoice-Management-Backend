{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarda\\\\OneDrive\\\\Documents\\\\INTERNSHIP\\\\internship\\\\src\\\\Components\\\\ManageGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ManageGroup.css';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageGroup = () => {\n  _s();\n  // State to store groups and the new group name input\n  const [groups, setGroups] = useState([]);\n  const [groupName, setGroupName] = useState(\"\");\n  const [totalGroups, setTotalGroups] = useState(0);\n\n  // Fetch groups on component mount\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n\n  // Fetch groups from the API\n  const fetchGroups = async () => {\n    try {\n      const response = await fetch('/groups/all'); // API call to fetch all groups\n      const data = await response.json();\n      setGroups(data); // Update state with fetched groups\n      setTotalGroups(data.length); // Update the total groups count\n    } catch (error) {\n      console.error(\"Error fetching groups:\", error);\n    }\n  };\n\n  // Handle adding a new group\n  const handleAddGroup = async () => {\n    if (groupName.trim()) {\n      try {\n        const response = await fetch('/groups/addgroup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            groupName: groupName\n          }) // Send group name to API\n        });\n        const result = await response.json();\n        if (response.ok) {\n          alert(result); // Show success message\n          setGroupName(\"\"); // Clear the input\n          fetchGroups(); // Re-fetch the group list\n        } else {\n          alert('Failed to add group');\n        }\n      } catch (error) {\n        console.error(\"Error adding group:\", error);\n      }\n    } else {\n      alert('Group name cannot be empty');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MG\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-groups\",\n      children: [\"Total Groups: \", totalGroups]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-group-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"add-group-title\",\n        children: \"Add a New Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"add-group-input\",\n        placeholder: \"Enter group name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value) // Update state on input change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-group-btn\",\n        onClick: handleAddGroup,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-dark table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Group Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date Created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: groups.length > 0 ? groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: group.groupName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: group.created_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"action-icons\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-pen-to-square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, group.group_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              children: \"No groups found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageGroup, \"oUwVdXs1ieivuGl7b8VwKiY+y2Y=\");\n_c = ManageGroup;\nexport default ManageGroup;\nvar _c;\n$RefreshReg$(_c, \"ManageGroup\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","jsxDEV","_jsxDEV","ManageGroup","_s","groups","setGroups","groupName","setGroupName","totalGroups","setTotalGroups","fetchGroups","response","fetch","data","json","length","error","console","handleAddGroup","trim","method","headers","body","JSON","stringify","result","ok","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","group","index","created_at","group_id","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/sarda/OneDrive/Documents/INTERNSHIP/internship/src/Components/ManageGroup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ManageGroup.css';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\n\r\nconst ManageGroup = () => {\r\n  // State to store groups and the new group name input\r\n  const [groups, setGroups] = useState([]);\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [totalGroups, setTotalGroups] = useState(0);\r\n\r\n  // Fetch groups on component mount\r\n  useEffect(() => {\r\n    fetchGroups();\r\n  }, []);\r\n\r\n  // Fetch groups from the API\r\n  const fetchGroups = async () => {\r\n    try {\r\n      const response = await fetch('/groups/all'); // API call to fetch all groups\r\n      const data = await response.json();\r\n      setGroups(data); // Update state with fetched groups\r\n      setTotalGroups(data.length); // Update the total groups count\r\n    } catch (error) {\r\n      console.error(\"Error fetching groups:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle adding a new group\r\n  const handleAddGroup = async () => {\r\n    if (groupName.trim()) {\r\n      try {\r\n        const response = await fetch('/groups/addgroup', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ groupName: groupName }), // Send group name to API\r\n        });\r\n\r\n        const result = await response.json();\r\n        if (response.ok) {\r\n          alert(result); // Show success message\r\n          setGroupName(\"\"); // Clear the input\r\n          fetchGroups(); // Re-fetch the group list\r\n        } else {\r\n          alert('Failed to add group');\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding group:\", error);\r\n      }\r\n    } else {\r\n      alert('Group name cannot be empty');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"MG\">\r\n      <Navbar />\r\n      \r\n      <div className=\"total-groups\">Total Groups: {totalGroups}</div>\r\n\r\n      <div className=\"add-group-container\">\r\n        <h2 className=\"add-group-title\">Add a New Group</h2>\r\n        <input\r\n          type=\"text\"\r\n          className=\"add-group-input\"\r\n          placeholder=\"Enter group name\"\r\n          value={groupName}\r\n          onChange={(e) => setGroupName(e.target.value)} // Update state on input change\r\n        />\r\n        <button className=\"add-group-btn\" onClick={handleAddGroup}>\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <table className=\"table table-dark table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Group Name</th>\r\n              <th>Date Created</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {groups.length > 0 ? (\r\n              groups.map((group, index) => (\r\n                <tr key={group.group_id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{group.groupName}</td>\r\n                  <td>{group.created_at}</td>\r\n                  <td className=\"action-icons\">\r\n                    <i className=\"fas fa-pen-to-square\"></i>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"4\">No groups found</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageGroup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}